// Generated by wxt
export {}
declare global {
  const ActionButton: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/ActionButton')['ActionButton']
  const ActionMenu: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/ActionMenu')['ActionMenu']
  const BottomPlayerInfo: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/BottomPlayerInfo')['BottomPlayerInfo']
  const CheatSheet: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/CheatSheet')['CheatSheet']
  const ConfirmationDialog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/ConfirmationDialog')['ConfirmationDialog']
  const ContentScriptContext: typeof import('wxt/utils/content-script-context')['ContentScriptContext']
  const EmptyPlayerCard: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/EmptyPlayerCard')['EmptyPlayerCard']
  const ExchangeCardsDialog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/ExchangeCardsDialog')['ExchangeCardsDialog']
  const GameCreation: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/GameCreation')['GameCreation']
  const GameLobby: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/GameLobby')['GameLobby']
  const GameLog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/GameLog')['GameLog']
  const GameOverScreen: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/GameOverScreen')['GameOverScreen']
  const GameView: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/GameView')['GameView']
  const InfluenceCards: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/InfluenceCards')['InfluenceCards']
  const InvalidMatchPattern: typeof import('wxt/utils/match-patterns')['InvalidMatchPattern']
  const InvestigateDecisionDialog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/InvestigateDecisionDialog')['InvestigateDecisionDialog']
  const LoseInfluenceDialog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/LoseInfluenceDialog')['LoseInfluenceDialog']
  const MainMenu: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/MainMenu')['MainMenu']
  const MatchPattern: typeof import('wxt/utils/match-patterns')['MatchPattern']
  const PlayerCard: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/PlayerCard')['PlayerCard']
  const ResponseButtons: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/ResponseButtons')['ResponseButtons']
  const SelectCardForInvestigationDialog: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/SelectCardForInvestigationDialog')['SelectCardForInvestigationDialog']
  const SignInButton: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/SignInButton')['SignInButton']
  const TargetSelectionOverlay: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/TargetSelectionOverlay')['TargetSelectionOverlay']
  const UserStatus: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/components/UserStatus')['UserStatus']
  const browser: typeof import('wxt/browser')['browser']
  const clearUser: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['clearUser']
  const createIframeUi: typeof import('wxt/utils/content-script-ui/iframe')['createIframeUi']
  const createIntegratedUi: typeof import('wxt/utils/content-script-ui/integrated')['createIntegratedUi']
  const createShadowRootUi: typeof import('wxt/utils/content-script-ui/shadow-root')['createShadowRootUi']
  const defineAppConfig: typeof import('wxt/utils/define-app-config')['defineAppConfig']
  const defineBackground: typeof import('wxt/utils/define-background')['defineBackground']
  const defineContentScript: typeof import('wxt/utils/define-content-script')['defineContentScript']
  const defineUnlistedScript: typeof import('wxt/utils/define-unlisted-script')['defineUnlistedScript']
  const defineWxtPlugin: typeof import('wxt/utils/define-wxt-plugin')['defineWxtPlugin']
  const fakeBrowser: typeof import('wxt/testing')['fakeBrowser']
  const getPlayerId: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['getPlayerId']
  const getPlayerName: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['getPlayerName']
  const getUser: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['getUser']
  const injectScript: typeof import('wxt/utils/inject-script')['injectScript']
  const removePlayerName: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['removePlayerName']
  const savePlayerId: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['savePlayerId']
  const savePlayerName: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['savePlayerName']
  const saveUser: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')['saveUser']
  const storage: typeof import('wxt/utils/storage')['storage']
  const useAppConfig: typeof import('wxt/utils/app-config')['useAppConfig']
  const useAuth: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/hooks/useAuth')['useAuth']
  const useCallback: typeof import('react')['useCallback']
  const useContext: typeof import('react')['useContext']
  const useEffect: typeof import('react')['useEffect']
  const useGame: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/hooks/useGame')['useGame']
  const useGameState: typeof import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/hooks/useGameState')['useGameState']
  const useMemo: typeof import('react')['useMemo']
  const useReducer: typeof import('react')['useReducer']
  const useRef: typeof import('react')['useRef']
  const useState: typeof import('react')['useState']
}
// for type re-export
declare global {
  // @ts-ignore
  export type { Browser } from 'wxt/browser'
  import('wxt/browser')
  // @ts-ignore
  export type { StorageArea, WxtStorage, WxtStorageItem, StorageItemKey, StorageAreaChanges, MigrationError } from 'wxt/utils/storage'
  import('wxt/utils/storage')
  // @ts-ignore
  export type { WxtWindowEventMap } from 'wxt/utils/content-script-context'
  import('wxt/utils/content-script-context')
  // @ts-ignore
  export type { IframeContentScriptUi, IframeContentScriptUiOptions } from 'wxt/utils/content-script-ui/iframe'
  import('wxt/utils/content-script-ui/iframe')
  // @ts-ignore
  export type { IntegratedContentScriptUi, IntegratedContentScriptUiOptions } from 'wxt/utils/content-script-ui/integrated'
  import('wxt/utils/content-script-ui/integrated')
  // @ts-ignore
  export type { ShadowRootContentScriptUi, ShadowRootContentScriptUiOptions } from 'wxt/utils/content-script-ui/shadow-root'
  import('wxt/utils/content-script-ui/shadow-root')
  // @ts-ignore
  export type { ContentScriptUi, ContentScriptUiOptions, ContentScriptOverlayAlignment, ContentScriptAppendMode, ContentScriptInlinePositioningOptions, ContentScriptOverlayPositioningOptions, ContentScriptModalPositioningOptions, ContentScriptPositioningOptions, ContentScriptAnchoredOptions, AutoMountOptions, StopAutoMount, AutoMount } from 'wxt/utils/content-script-ui/types'
  import('wxt/utils/content-script-ui/types')
  // @ts-ignore
  export type { WxtAppConfig } from 'wxt/utils/define-app-config'
  import('wxt/utils/define-app-config')
  // @ts-ignore
  export type { ScriptPublicPath, InjectScriptOptions } from 'wxt/utils/inject-script'
  import('wxt/utils/inject-script')
  // @ts-ignore
  export type { AuthState } from '/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/hooks/useAuth'
  import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/hooks/useAuth')
  // @ts-ignore
  export type { User } from '/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage'
  import('/Users/viktortassen/Documents/Projects/conflictology/conflictology-bolt/extension-dev/utils/storage')
}
